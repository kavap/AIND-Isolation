{
    "critiques": {
        "680": {
            "rubric_items": {
                "5510": {
                    "result": "failed",
                    "observation": "{\n    \"8. Test that alphabeta() raises SearchTimeout when the timer expires\": {\n        \"traceback\": \"TypeError: alphabeta() missing 2 required positional arguments: 'time_left' and 'timer_threshold'\\n\"\n    }, \n    \"14. Submission includes heuristic_analysis.pdf\": {\n        \"traceback\": \"AssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\\n\"\n    }, \n    \"6. Test the interface of AlphaBetaPlayer.get_move()\": {\n        \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_irywnsao/workspace/game_agent.py\\\", line 338, in get_move\\n    best_move =  self.iterativeDeepening(game, time_left, self.TIMER_THRESHOLD )\\n  File \\\"/home/vmuser_irywnsao/workspace/game_agent.py\\\", line 350, in iterativeDeepening\\n    level_move = self.alphabeta(game,depth+1,time_left,timer_threshold)\\n  File \\\"/home/vmuser_irywnsao/testcases.py\\\", line 772, in alphabeta\\n    if self.time_left() < self.TIMER_THRESHOLD:\\nTypeError: 'NoneType' object is not callable\\n\"\n    }, \n    \"2. Test functionality of MinimaxPlayer.minimax()\": {\n        \"traceback\": \"AssertionError: False is not true : Your MinimaxAgent.minimax function did not visit every node in the game tree as player 1.  First check for off-by-one errors in your handling of the depth limiting. Then, especially if the number of nodes explored by your agent is too low, check everywhere you call to game.get_legal_moves() to make sure you are getting the legal moves for the appropriate player at each level of the game tree.  Finally, you may be using non-standard search optimizations that are not supported by the test cases.  The range of expansions accepted will vary slightly within the range indicated based on your termination condition.\\n\\nExpected number of visited nodes -- min: 5 max: 5\\nNumber of nodes your agent explored: 1\\n\\nTest Case Details:\\n------------------\\nHeuristic: open_move_score\\nDepth limit: 1\\nInitial Board State:\\n     0   1   2   3   4   5   6   7   8\\n\\r0  |   |   |   |   |   |   |   |   |   | \\n\\r1  |   |   |   | - |   | - |   |   |   | \\n\\r2  |   |   |   | - | - | - | 1 |   |   | \\n\\r3  |   |   | - | - | - | - | - |   |   | \\n\\r4  |   | 2 | - |   |   | - | - | - |   | \\n\\r5  |   |   | - |   |   | - | - | - |   | \\n\\r6  |   |   | - | - | - | - | - |   | - | \\n\\r7  |   |   |   |   | - |   | - |   |   | \\n\\r8  |   |   |   |   |   |   |   |   |   | \\n\\r\\ngame._board_state:\\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 13, 56]\\n\\n\"\n    }, \n    \"5. Test interface of AlphaBetaPlayer.alphabeta()\": {\n        \"traceback\": \"TypeError: alphabeta() missing 2 required positional arguments: 'time_left' and 'timer_threshold'\\n\"\n    }, \n    \"7. Test functionality of AlphaBetaPlayer.alphabeta()\": {\n        \"traceback\": \"TypeError: alphabeta() missing 2 required positional arguments: 'time_left' and 'timer_threshold'\\n\"\n    }, \n    \"11. Test output interface of custom_score()\": {\n        \"traceback\": \"AssertionError: -2 is not an instance of <class 'float'> : The custom_score() function should return a floating point value, but your function returned <class 'int'>\\n\"\n    }, \n    \"15. Submission includes research_review.pdf\": {\n        \"traceback\": \"AssertionError: False is not true : You must submit a report named research_review.pdf for review.\\n\"\n    }, \n    \"12. Test output interface of custom_score_2()\": {\n        \"traceback\": \"AssertionError: 2 is not an instance of <class 'float'> : The custom_score_2() function should return a floating point value, but your function returned <class 'int'>\\n\"\n    }\n}"
                }
            }
        }
    }
}